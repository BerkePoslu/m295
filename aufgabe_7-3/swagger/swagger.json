{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login with email and password to get access to the library",
        "description": "This route logs in the user with email and password to get access to the library. If the user is already logged in, a 200 status code is returned. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/verify": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify if user is logged in",
        "description": "This route verifies if the user is logged in and returns the email of the user if logged in.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/logout": {
      "delete": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logout the user from the server and delete the session cookie",
        "description": "This route logs out the user from the server and deletes the session cookie.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/lends": {
      "get": {
        "tags": [
          "Lends"
        ],
        "summary": "Get all lends from the lend.json and return them as JSON",
        "description": "This route returns all lends from the lend.json file. If the user is not logged in, a 401 status code is returned.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Lends"
        ],
        "summary": "Create lend and add it to lend.json and return it as JSON",
        "description": "This route creates a lend and adds it to the lend.json file. If the user is not logged in, a 401 status code is returned.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/lends/{id}": {
      "get": {
        "tags": [
          "Lends"
        ],
        "summary": "Get lend by id from lend.json and return it as JSON",
        "description": "This route returns a lend by its id from the lend.json file. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Lends"
        ],
        "summary": "Delete lend by id from lend.json and return it as JSON",
        "description": "This route deletes a lend by its id from the lend.json file. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Home"
        ],
        "summary": "Home route, returns a greeting message to the user if logged in",
        "description": "This route returns a greeting message to the user if logged in and a 401 status code if not logged in.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get all books from the books.json and return them as JSON",
        "description": "This route returns all books from the books.json file. If the user is not logged in, a 401 status code is returned.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Create book and add it to books.json and return it as JSON",
        "description": "This route creates a book and adds it to the books.json file. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "isbn": {
                  "example": "any"
                },
                "title": {
                  "example": "any"
                },
                "year": {
                  "example": "any"
                },
                "author": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/books/{isbn}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Get book by isbn from books.json and return it as JSON",
        "description": "This route returns a book by its isbn from the books.json file. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Update book by isbn from books.json and return it as JSON",
        "description": "This route updates a book by its isbn from the books.json file. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      },
      "patch": {
        "tags": [
          "Books"
        ],
        "summary": "Update book by isbn from books.json and return it as JSON",
        "description": "This route updates a book by its isbn from the books.json file. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Delete book by isbn from books.json and return it as JSON",
        "description": "This route deletes a book by its isbn from the books.json file. If the user is not logged in, a 401 status code is returned.",
        "parameters": [
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}